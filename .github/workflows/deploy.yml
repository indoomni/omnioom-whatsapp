name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Increment version and push
        run: |
          git config --global user.name 'github-actions'
          git config --global user.email 'github-actions@github.com'
          npm version patch --no-git-tag-version
          git add package.json yarn.lock
          git commit -m 'chore(release): bump version to $(node -p "require('./package.json').version") [skip ci]'
          git push

      - name: Get version
        id: get_version
        run: echo "::set-output name=version::$(node -e "console.log(require('./package.json').version)")"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/indoomni/omnioom-whatsapp:latest
            ghcr.io/indoomni/omnioom-whatsapp:${{ steps.get_version.outputs.version }}

      - name: Push changes
        run: git push

  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to server
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.SSH_HOST }}
  #         username: ${{ secrets.SSH_USERNAME }}
  #         key: ${{ secrets.SSH_KEY }}
  #         script: |
  #           cd /opt/indoomni/omnioom-whatsapp
  #           ./ci-start.sh
